library(tidyverse)
dat = read.csv("./data/raw/BioLog_Plate_Data.csv")
glimpse(dat)
levels(dat$Sample.ID)
gather(dat, key = Hour, value = Absorbance)
levels(dat$Sample.ID)
glimpse(dat)
names(dat)
gather(dat, key = Hour, value = Absorbance, -c("Hr_24","Hr_48","Hr_144"))
gather(dat, key = Hour, value = Absorbance, c("Hr_24","Hr_48","Hr_144"))
dat_long = gather(dat, key = Hour, value = Absorbance, c("Hr_24","Hr_48","Hr_144"))
glimpse(dat_long)
View(dat_long)
write.csv(dat_long, "./data/cleaned_BioLog_plate_data.csv", quote = FALSE, row.names = FALSE)
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
dat
dat %>%
group_by(Sample.ID) %>%
summarize(N=n(), MeanAbs = mean(Absorbance))
levels(dat_long$Hour)
dat_long$Hour
unique(dat_long$Hour)
unique(dat_long$Hour)
plyr::mapvalues(dat_long$Hour, from = unique(dat_long$Hour), to = c(24,48,144))
hours = plyr::mapvalues(dat_long$Hour, from = unique(dat_long$Hour), to = c(24,48,144))
hours = as.numeric(hours)
dat_long$Hour = hours
glimpse(dat_long)
write.csv(dat_long, "./data/cleaned_BioLog_plate_data.csv", quote = FALSE, row.names = FALSE)
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
ggplot(dat, aes(x=Hour, y=Absorbance, color=Substrate)) +
geom_point()
ggplot(dat, aes(x=Hour, y=Absorbance, color=Substrate)) +
geom_point() +
facet_wrap(~Sample.ID)
glimpse(dat)
glimpse(dat_long)
dat_long$Sample.ID
table(dat_long$Sample.ID)
table(dat_long$Sample.ID)[1]
rep(unique(dat_long$Sample.ID))
unique(dat_long$Sample.ID)
rep(as.character(unique(dat_long$Sample.ID)))
rep(as.character(unique(dat_long$Sample.ID)), each = 3)
rep(as.character(unique(dat_long$Sample.ID)), each = table(dat_long$Sample.ID)[1])
rep(c("Water","Soil","Soil","Water"), each = table(dat_long$Sample.ID)[1])
type = rep(c("Water","Soil","Soil","Water"), each = table(dat_long$Sample.ID)[1])
dat_long$SampleType = type
write.csv(dat_long, "./data/cleaned_BioLog_plate_data.csv", quote = FALSE, row.names = FALSE)
##################################################
#   This script explores the cleaned data set    #
#                                                #
#   Author: Geoffrey Zahn - Feb 5, 2019          #
#                                                #
##################################################
# Load packages ####
library(tidyverse)
# Load cleaned data ####
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
# Explore data ####
# Glimpse data
glimpse(dat)
# Average absorbance by sample
dat %>%
group_by(Sample.ID) %>%
summarise(N=n(), Min.Abs = min(Absorbance), Mean.Abs = mean(Absorbance), Max.Abs = max(Absorbance))
Site.Summary = dat %>%
group_by(Sample.ID) %>%
summarise(N=n(), Min.Abs = min(Absorbance), Mean.Abs = mean(Absorbance), Max.Abs = max(Absorbance))
Site.Summary
hist(dat$Absorbance)
dat %>%
group_by(Sample.ID) %>%
hist(dat$Absorbance)
ggplot(dat, aes(x=Absorbance)) +
geom_histogram() +
facet_grid(~Sample.ID)
ggplot(dat, aes(x=Absorbance)) +
geom_histogram() +
facet_grid(~Sample.ID) +
ggtitle("Distribution of Absorbance for All Substrates")
dat %>%
group_by(SampleType) %>%
summarise(Max = max(Absorbance))
dat %>%
group_by(SampleType) %>%
summarise(Max = max(Absorbance))[,2]
maxes = dat %>%
group_by(SampleType) %>%
summarise(Max = max(Absorbance))
dat[dat$SampleType == "Water"]
dat[dat$SampleType == "Water"]
dat[dat$SampleType == "Water",]
dat[dat$SampleType == "Water",]$Absorbance
max(dat[dat$SampleType == "Water",]$Absorbance)
maxes
which(dat$Absorbance == max(dat[dat$SampleType == "Water",]$Absorbance))
maxsoil = which(dat$Absorbance == max(dat[dat$SampleType == "Soil",]$Absorbance))
maxsoil
ggplot(dat, aes(x=Hour, y=Absorbance, color=Substrate)) +
geom_point() +
facet_wrap(~Sample.ID)
maxes
which(dat$Absorbance == maxes["Soil","Max"])
maxes["Soil","Max"]
which(dat$Absorbance == maxes[maxes$SampleType == "Soil","Max"])
maxes[maxes$SampleType == "Soil","Max"]
dat[maxwater,"Substrate"]
maxwater = which(dat$Absorbance == max(dat[dat$SampleType == "Water",]$Absorbance))
maxsoil = which(dat$Absorbance == max(dat[dat$SampleType == "Soil",]$Absorbance))
dat[maxwater,"Substrate"]
dat[maxsoil,"Substrate"]
getmax.byType = function(x){
which(dat$Absorbance == max(dat[dat$SampleType == x,]$Absorbance))
}
getmax.byType("Water")
class("Water")
class("Water") == "character"
getmax.byType = function(x){
if(class(x) != "character"){
stop("x must be a single character string.")
}
which(dat$Absorbance == max(dat[dat$SampleType == x,]$Absorbance))
}
maxwater = getmax.byType(22)
maxsoil = getmax.byType("Soil")
source("./R/01_functions.R")
library(tidyverse)
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
##################################################
#   This script makes publication figs from      #
#   the cleaned data set                         #
#                                                #
#   Author: Geoffrey Zahn - Feb 5, 2019          #
#                                                #
##################################################
# Load packages
library(tidyverse)
# Load cleaned data
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter() +
geom_smooth(se=FALSE)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
theme_set(theme_bw)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
theme_set("theme_bw")
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
?theme_set
##################################################
#   This script makes publication figs from      #
#   the cleaned data set                         #
#                                                #
#   Author: Geoffrey Zahn - Feb 5, 2019          #
#                                                #
##################################################
# Load packages
library(tidyverse)
theme_get
theme_get()
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
theme_set(default)
theme_set(theme_default)
theme_set(theme_classic)
library(tidyverse)
dat = read.csv("./data/cleaned_BioLog_plate_data.csv")
# Figure 1 - Water vs Soil, all substrates over time
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE) +
facet_grid(~SampleType)
ggplot(dat, aes(x=Hour,y=Absorbance,color=Substrate)) +
geom_jitter(alpha = .5) +
geom_smooth(se=FALSE) +
facet_grid(~SampleType) +
theme_bw()
ggsave("./figs/Fig1_water_vs_soil_absorbance.png", dpi = 300, width = 12, height = 8)
ggplot(dat, aes(x=Hour,y=Absorbance, color=Sample.ID, linetype = Dilution)) +
geom_point() +
geom_smooth(se=FALSE) +
facet_wrap(~Substrate)
ggplot(dat, aes(x=Hour,y=Absorbance, color=Sample.ID, linetype = factor(Dilution))) +
geom_point() +
geom_smooth(se=FALSE) +
facet_wrap(~Substrate)
ggplot(dat, aes(x=Hour,y=Absorbance, color=Sample.ID)) +
geom_smooth(se=FALSE) +
facet_wrap(~Substrate)
ggplot(dat, aes(x=Hour,y=Absorbance, color=SampleType)) +
geom_smooth(se=FALSE) +
facet_wrap(~Substrate) +
theme_bw()
ggsave("./figs/Fig2_Absorbance_Over_Time_Each_Substrate.png", dpi = 300, width = 12, height = 8)
##################################################
#   This script explores the cleaned data set    #
#                                                #
#   Author: Geoffrey Zahn - Feb 5, 2019          #
#                                                #
##################################################
# Load packages ####
library(tidyverse)
# Load custom R function(s) ####
source("./R/01_functions.R")
